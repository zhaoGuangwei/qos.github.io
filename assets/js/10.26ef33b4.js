(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{356:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"qos-daemon-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qos-daemon-server"}},[t._v("#")]),t._v(" QOS Daemon server")]),t._v(" "),s("p",[s("code",[t._v("qosd")]),t._v(": commands to create, initialize, and start QOS network.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("init")]),t._v(" "),s("a",{attrs:{href:"#initialization"}},[t._v("Initialization")])]),t._v(" "),s("li",[s("code",[t._v("add-genesis-accounts")]),t._v(" "),s("a",{attrs:{href:"#genesis-accounts"}},[t._v("Genesis accounts")])]),t._v(" "),s("li",[s("code",[t._v("add-guardian")]),t._v(" "),s("a",{attrs:{href:"#guardian"}},[t._v("Guardian")])]),t._v(" "),s("li",[s("code",[t._v("gentx")]),t._v(" "),s("a",{attrs:{href:"#gentx"}},[t._v("Gentx")])]),t._v(" "),s("li",[s("code",[t._v("collect-gentxs")]),t._v(" "),s("a",{attrs:{href:"#collect-gentxs"}},[t._v("Collect gentxs")])]),t._v(" "),s("li",[s("code",[t._v("config-root-ca")]),t._v(" "),s("a",{attrs:{href:"#root-ca"}},[t._v("Root CA")])]),t._v(" "),s("li",[s("code",[t._v("start")]),t._v(" "),s("a",{attrs:{href:"#start"}},[t._v("Start")])]),t._v(" "),s("li",[s("code",[t._v("export")]),t._v(" "),s("a",{attrs:{href:"#export"}},[t._v("Export")])]),t._v(" "),s("li",[s("code",[t._v("testnet")]),t._v(" "),s("a",{attrs:{href:"#testnet"}},[t._v("Testnet")])]),t._v(" "),s("li",[s("code",[t._v("unsafe-reset-all")]),t._v(" "),s("a",{attrs:{href:"#reset"}},[t._v("Reset")])]),t._v(" "),s("li",[s("code",[t._v("tendermint")]),t._v(" "),s("a",{attrs:{href:"#tendermint"}},[t._v("Tendermint")])]),t._v(" "),s("li",[s("code",[t._v("version")]),t._v(" "),s("a",{attrs:{href:"#version"}},[t._v("Version")])])]),t._v(" "),s("p",[t._v("global parameters:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("parameter")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("default value")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--home string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"$HOME/.qosd"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('directory for config and data (default "$HOME/.qosd")')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--log_level string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"main:info,state:info,*:error"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('Log level (default "main:info,state:info,*:error")')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--trace")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("print out full stack trace on errors")])])])]),t._v(" "),s("h2",{attrs:{id:"initialization"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initialization"}},[t._v("#")]),t._v(" Initialization")]),t._v(" "),s("p",[s("code",[t._v("qosd init --moniker <your_custom_moniker> --chain-id <chain_id> --overwrite <overwrite>")])]),t._v(" "),s("p",[t._v("main parameters:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("--moniker")]),t._v("   name in the P2P network, corresponds to "),s("code",[t._v("moniker")]),t._v(" configuration item in "),s("code",[t._v("config.toml")])]),t._v(" "),s("li",[s("code",[t._v("--chain-id")]),t._v("  chain ID")]),t._v(" "),s("li",[s("code",[t._v("--overwrite")]),t._v(" whether to overwrite the existing initial file")])]),t._v(" "),s("p",[t._v("initialize "),s("code",[t._v("genesis")]),t._v("、"),s("code",[t._v("priv-validator")]),t._v("、"),s("code",[t._v("p2p-node")]),t._v(" files:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ qosd init --moniker capricorn-1000\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("result:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chain_id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test-chain-9nlhQS"')]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c427167c8d2838b00a46e33c4b325a7f05bd2c16"')]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app_message"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" null\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("two directories "),s("code",[t._v("data")]),t._v(" and "),s("code",[t._v("config")]),t._v(" will be created under "),s("code",[t._v("$HOME/.qosd/")]),t._v(":\n"),s("code",[t._v("data")]),t._v(" directory for storing data saved after network startup.\n"),s("code",[t._v("config")]),t._v(" holds "),s("code",[t._v("config.toml")]),t._v("，"),s("code",[t._v("genesis.json")]),t._v("，"),s("code",[t._v("node_key.json")]),t._v("，"),s("code",[t._v("priv_validator.json")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"genesis-accounts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#genesis-accounts"}},[t._v("#")]),t._v(" Genesis accounts")]),t._v(" "),s("p",[s("code",[t._v("qosd add-genesis-accounts <account_coin_s>")])]),t._v(" "),s("p",[s("code",[t._v("<account_coin_s>")]),t._v(" account currency list, eg:[address1],[coin1],[coin2];[address2],[coin1],[coin2]")]),t._v(" "),s("p",[t._v("add genesis accounts to "),s("code",[t._v("genesis.json")]),t._v(" file:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ qosd add-genesis-accounts qosacc1c7nh7qquvjm3p28xpsnfn420437ztvzy2hwdtk,10000QOS\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"guardian"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#guardian"}},[t._v("#")]),t._v(" Guardian")]),t._v(" "),s("p",[s("code",[t._v("qosd add-guardian --address <address> --description <description>")])]),t._v(" "),s("p",[t._v("main parameters:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("--address")]),t._v("     address of guardian")]),t._v(" "),s("li",[s("code",[t._v("--description")]),t._v(" description")])]),t._v(" "),s("p",[t._v("add guardian to "),s("code",[t._v("genesis.json")]),t._v(" file:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ qosd add-guardian --address qosacc1c7nh7qquvjm3p28xpsnfn420437ztvzy2hwdtk --description "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is the description"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"gentx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gentx"}},[t._v("#")]),t._v(" Gentx")]),t._v(" "),s("p",[t._v("Generate a create validator("),s("RouterLink",{attrs:{to:"/en/spec/staking.html#TxCreateValidator"}},[t._v("TxCreateValidator")]),t._v(") transaction.")],1),t._v(" "),s("p",[s("code",[t._v("qosd gentx --moniker <validator_name> --owner <account_address> --tokens <tokens>")])]),t._v(" "),s("p",[t._v("visit "),s("RouterLink",{attrs:{to:"/en/command/qoscli.html#成为验证节点"}},[t._v("create validator")]),t._v(" for more information.")],1),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ qosd gentx --moniker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Arya\'s node"')]),t._v(" --owner qosacc1c7nh7qquvjm3p28xpsnfn420437ztvzy2hwdtk --tokens "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("the signed transaction data file with the file name "),s("code",[t._v("node ID@IP")]),t._v(" will be generated in the "),s("code",[t._v("$HOME/.qosd/config/gentx")]),t._v(" directory.")]),t._v(" "),s("h2",{attrs:{id:"collect-gentxs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collect-gentxs"}},[t._v("#")]),t._v(" Collect gentxs")]),t._v(" "),s("p",[s("code",[t._v("qosd collect-gentxs")])]),t._v(" "),s("p",[t._v("Collect the transaction data in the "),s("code",[t._v("gentx")]),t._v(" directory and fill it into "),s("code",[t._v("genesis.json")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"root-ca"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#root-ca"}},[t._v("#")]),t._v(" Root CA")]),t._v(" "),s("p",[s("code",[t._v("qosd config-root-ca --qcp <qcp_root.pub> --qsc <qsc_root.pub>")])]),t._v(" "),s("p",[s("code",[t._v("<qcp_root.pub>")]),t._v("、"),s("code",[t._v("<qsc_root.pub>")]),t._v(" is the file path of root CA public key")]),t._v(" "),s("p",[t._v("setting the root CA information for "),s("RouterLink",{attrs:{to:"/en/command/qoscli.html#qsc"}},[t._v("QSC")]),t._v(" and "),s("RouterLink",{attrs:{to:"/en/command/qoscli.html#qcp"}},[t._v("QCP")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[t._v("#")]),t._v(" Start")]),t._v(" "),s("p",[s("code",[t._v("qosd start")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("parameter")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("default value")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--abci string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"socket"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Specify abci transport (socket")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--address string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"tcp://0.0.0.0:26658")')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('Listen address (default "tcp://0.0.0.0:26658")')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--consensus.create_empty_blocks")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Set this to false to only produce blocks when there are txs or when the AppHash changes (default true)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--fast_sync")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Fast blockchain syncing (default true)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--moniker string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("<your_computer_name>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Node Name")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--p2p.laddr string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"tcp://0.0.0.0:26656"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('Node listen address. (0.0.0.0:0 means any interface, any port) (default "tcp://0.0.0.0:26656")')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--p2p.persistent_peers string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('""')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Comma-delimited ID@host:port persistent peers")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--p2p.pex")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Enable/disable Peer-Exchange (default true)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--p2p.private_peer_ids string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('""')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Comma-delimited private peer IDs")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--p2p.seed_mode")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Enable/disable seed mode")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--p2p.seeds string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('""')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Comma-delimited ID@host:port seed nodes")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--p2p.upnp")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Enable/disable UPNP port forwarding")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--priv_validator_laddr string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('""')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Socket address to listen on for connections from external priv_validator process")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--proxy_app string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"tcp://127.0.0.1:26658"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Proxy app address, or 'nilapp' or 'kvstore' for local testing. (default \"tcp://127.0.0.1:26658\")")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--pruning string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"syncable"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('Pruning strategy: syncable, nothing, everything (default "syncable")')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--rpc.grpc_laddr string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('""')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GRPC listen address (BroadcastTx only). Port required")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--rpc.laddr string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('"tcp://0.0.0.0:26657"')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('RPC listen address. Port required (default "tcp://0.0.0.0:26657")')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--rpc.unsafe")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Enabled unsafe rpc methods")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--trace-store string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Enable KVStore tracing to an output file")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--with-tendermint")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Run abci app embedded in-process with tendermint")])])])]),t._v(" "),s("p",[t._v("start the QOS network:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ qosd start\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"export"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export"}},[t._v("#")]),t._v(" Export")]),t._v(" "),s("p",[s("code",[t._v("qosd export --height <block_height> --for-zero-height <export_state_to_start_at_height_zero> -o <directory for exported json file>")])]),t._v(" "),s("p",[t._v("main parameters:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("--height")]),t._v("            export block height")]),t._v(" "),s("li",[s("code",[t._v("--for-zero-height")]),t._v("   whether to export the state for restarting the network from zero height")]),t._v(" "),s("li",[s("code",[t._v("--o")]),t._v("                 export file location")])]),t._v(" "),s("p",[t._v("export state with block height 4:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("qosd "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" --height "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("the file named "),s("code",[t._v("genesis-<height>-<timestamp>.json")]),t._v(" will be generated under "),s("code",[t._v("$HOME/.qosd")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"testnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#testnet"}},[t._v("#")]),t._v(" Testnet")]),t._v(" "),s("p",[s("code",[t._v("qosd testnet")]),t._v(" batch generation of cluster configuration files:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("testnet will create "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v"')]),t._v(" number of directories and populate each with\nnecessary files "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("private validator, genesis, config, etc."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n\nNote, strict routability "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" addresses is turned off "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the config file.\n\nExample:\n\n\tqosd testnet --chain-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("qostest --v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" --o"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./output --starting-ip-address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.2 --genesis-accounts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("qosacc1c7nh7qquvjm3p28xpsnfn420437ztvzy2hwdtk,1000000qos\n\nUsage:\n  qosd testnet "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nFlags:\n      --chain-id string              Chain ID\n      --compound                     whether the validator"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s income is calculated as compound interest, default: true (default true)\n      --genesis-accounts string      Add genesis accounts to genesis.json, eg: qosacc1c7nh7qquvjm3p28xpsnfn420437ztvzy2hwdtk,1000000qos,1000000qstars. Multiple accounts separated by '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n      --guardians string             addresses for guardian. Multiple addresses separated by '")]),t._v(",'\n  -h, --help                         "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" testnet\n      --home-client string           directory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" keybase "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/.qoscli"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --hostname-prefix string       Hostname prefix "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node results "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" persistent peers list ID0@node0:26656, ID1@node1:26656, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --node-dir-prefix string       Prefix the directory name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each node with "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node results "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" node0, node1, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --o string                     Directory to store initialization data "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the testnet "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./mytestnet"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --qcp-root-ca string           Config pubKey of root CA "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" QSC\n      --qsc-root-ca string           Config pubKey of root CA "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" QCP\n      --starting-ip-address string   Starting IP address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.1 results "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" persistent peers list ID0@192.168.0.1:26656, ID1@192.168.0.2:26656, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --v int                        Number of validators to initialize the testnet with "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nGlobal Flags:\n      --home string        directory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" config and data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/.qosd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --log_level string   Log level "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main:info,state:info,*:error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      --trace              print out full stack trace on errors\n\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])]),s("p",[t._v("main parameters:")]),t._v(" "),s("ul",[s("li",[t._v("chain-id            chain ID")]),t._v(" "),s("li",[t._v("genesis-accounts    genesis accounts")]),t._v(" "),s("li",[t._v("hostname-prefix     host name prefix")]),t._v(" "),s("li",[t._v("moniker             moniker")]),t._v(" "),s("li",[t._v("qcp-root-ca         pubKey of root CA for QCP")]),t._v(" "),s("li",[t._v("qsc-root-ca         pubKey of root CA for QSC")]),t._v(" "),s("li",[t._v("compound            delegation "),s("code",[t._v("compound")]),t._v(", default "),s("code",[t._v("true")])]),t._v(" "),s("li",[t._v("starting-ip-address start IP")])]),t._v(" "),s("h2",{attrs:{id:"reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" Reset")]),t._v(" "),s("p",[s("code",[t._v("qosd unsafe-reset-all")])]),t._v(" "),s("p",[t._v("Reset the blockchain database, delete the address book file, and reset the state to the initial state.")]),t._v(" "),s("h2",{attrs:{id:"tendermint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tendermint"}},[t._v("#")]),t._v(" Tendermint")]),t._v(" "),s("p",[t._v("tendermint subcommands:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("qosd tendermint show-address")]),t._v("    Show this node's tendermint validator address")]),t._v(" "),s("li",[s("code",[t._v("qosd tendermint show-node-id")]),t._v("    Show this node's ID")]),t._v(" "),s("li",[s("code",[t._v("qosd tendermint show-validator")]),t._v("  Show this node's tendermint validator info")])]),t._v(" "),s("h2",{attrs:{id:"version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[t._v("#")]),t._v(" Version")]),t._v(" "),s("p",[t._v("view "),s("RouterLink",{attrs:{to:"/en/command/qoscli.html#version"}},[t._v("qoscli version")])],1)])}),[],!1,null,null,null);e.default=n.exports}}]);