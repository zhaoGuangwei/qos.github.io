(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{444:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"qos公链经济模型-v1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qos公链经济模型-v1"}},[t._v("#")]),t._v(" QOS公链经济模型 v1")]),t._v(" "),e("p",[t._v("QOS公链是基于"),e("a",{attrs:{href:"https://multicoin.capital/wp-content/uploads/2018/03/DPoS_-Features-and-Tradeoffs.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("授权股权证明Delegated Proof-of-Stake"),e("OutboundLink")],1),t._v("和"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Byzantine_fault_tolerance",target:"_blank",rel:"noopener noreferrer"}},[t._v("拜占庭容错共识算法"),e("OutboundLink")],1),t._v("的双层链机制的区块链基础设施。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://github.com/QOSGroup/static/blob/master/eco_overview.png?raw=true",alt:"QOS经济模型概览"}})]),t._v(" "),e("p",[t._v("目录:")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"#%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99"}},[t._v("设计原则")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E8%A7%92%E8%89%B2"}},[t._v("角色")])]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"#%E8%BD%BB%E9%92%B1%E5%8C%85-litewallet"}},[t._v("轻钱包")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E5%85%A8%E8%8A%82%E7%82%B9-fullnode"}},[t._v("全节点")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E9%AA%8C%E8%AF%81%E4%BA%BA"}},[t._v("验证人")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E5%A7%94%E6%89%98%E4%BA%BA"}},[t._v("委托人")])])])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E6%A8%A1%E5%9D%97"}},[t._v("模块")])]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"#QOS%E9%80%9A%E8%83%80%E6%9C%BA%E5%88%B6"}},[t._v("通胀")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E7%A4%BE%E5%8C%BA%E5%9F%BA%E9%87%91"}},[t._v("社区基金")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E9%AA%8C%E8%AF%81/%E5%A7%94%E6%89%98%E6%9C%BA%E5%88%B6"}},[t._v("验证/委托")])]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"#%E9%AA%8C%E8%AF%81%E4%BA%BA"}},[t._v("验证人")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E5%A7%94%E6%89%98%E4%BA%BA"}},[t._v("委托人")])])])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E6%83%A9%E7%BD%9A%E6%9C%BA%E5%88%B6"}},[t._v("惩罚机制")])]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"#%E5%8F%8C%E7%AD%BE"}},[t._v("双签")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#%E6%9C%AA%E5%8F%82%E4%B8%8E%E7%A4%BE%E5%8C%BA%E8%87%AA%E6%B2%BB"}},[t._v("未参与社区自治")])])])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#gas"}},[t._v("gas")])])])])])]),t._v(" "),e("h2",{attrs:{id:"设计原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),e("ul",[e("li",[t._v("不管是验证人还是委托人，币有相同的收益权")]),t._v(" "),e("li",[t._v("不管是验证人还是委托人，币有相同的治理权")]),t._v(" "),e("li",[t._v("惩罚验证人时，除了验证人自己的币，委托人的币也会受惩罚，因此委托人需要对验证人进行考察后进行委托；")]),t._v(" "),e("li",[t._v("一个验证人能无限接收委托人委托的币，这会增加验证人的权益，QOS公链对此不做机制上的干涉，但验证人的当前数据将会公开，由委托人自己决定是否要委托给该验证人；")]),t._v(" "),e("li",[t._v("验证人排名的依据：自抵押qos+委托人委托的qos。排名前"),e("code",[t._v("$max_validator_cnt")]),t._v("的验证人可以进行验证挖矿；")]),t._v(" "),e("li",[t._v("验证人挖矿收益的到帐方式：系统定期打款到帐，并可选择自动复投。")])]),t._v(" "),e("h2",{attrs:{id:"角色"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角色"}},[t._v("#")]),t._v(" 角色")]),t._v(" "),e("h3",{attrs:{id:"轻钱包-litewallet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轻钱包-litewallet"}},[t._v("#")]),t._v(" 轻钱包-Litewallet")]),t._v(" "),e("p",[t._v("即QOS轻节点客户端，可以执行QOScli支持的交易，不需要全部账本，仅验证少量头部信息及交易，需要较小资源，用于普通用户/手机客户端。\n目前除qos外，还支持Ethereum、cosmos等账户管理、委托功能。详见"),e("a",{attrs:{href:"https://github.com/QOSGroup/litewallet",target:"_blank",rel:"noopener noreferrer"}},[t._v("litewallet repo"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"全节点-fullnode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全节点-fullnode"}},[t._v("#")]),t._v(" 全节点-Fullnode")]),t._v(" "),e("p",[t._v("和其他区块链网络相同，QOS公链全节点指包含全部账本的QOS节点。")]),t._v(" "),e("h3",{attrs:{id:"验证人-validator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证人-validator"}},[t._v("#")]),t._v(" 验证人-Validator")]),t._v(" "),e("p",[t._v("QOS公链中有一个验证人节点的集合，验证人节点担当了BFT共识算法的具体实现——网络中的每一块都需要收集至少2/3的验证人节点签名。QOS公链中的每一块包含零到多条交易，验证人节点对块中的交易进行校验，对校验通过的块用自己的私钥签名，并广播到网络中去。")]),t._v(" "),e("p",[t._v("QOS公链验证人，必须是QOS公链的全节点，但全节点需要发出"),e("RouterLink",{attrs:{to:"/spec/validators/all_about_validators.html#create-validator"}},[t._v("创建验证人交易")]),t._v("，并符合"),e("RouterLink",{attrs:{to:"/spec/validators/all_about_validators.html#如何成为QOS验证人"}},[t._v("一定条件")]),t._v("，才能成为验证人。")],1),t._v(" "),e("p",[t._v("QOS公链验证人节点通过绑定一定的QOS，同时承担了DPOS算法的实现——依照其绑定的QOS数量，获得QOS网络挖矿的收益。")]),t._v(" "),e("p",[t._v("希望了解更多验证人节点的信息或希望成为QOS验证人，请查阅"),e("RouterLink",{attrs:{to:"/spec/validators/all_about_validators.html"}},[t._v("验证人节点详解")])],1),t._v(" "),e("h3",{attrs:{id:"委托人-delegator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#委托人-delegator"}},[t._v("#")]),t._v(" 委托人-Delegator")]),t._v(" "),e("p",[t._v("对于自己没有能力或者意愿来自己运行一个验证节点，但希望得到挖矿收益的QOS持有者，可以选择一个验证人，通过委托（delegation）将QOS投入到该验证人的总绑定数中，增加验证人的投票权重，收到相应的挖矿收益作为回报。\n关于委托收益的计算，详见"),e("a",{attrs:{href:"#%E9%AA%8C%E8%AF%81/%E5%A7%94%E6%89%98%E6%9C%BA%E5%88%B6"}},[t._v("QOS验证/委托机制")])]),t._v(" "),e("p",[t._v("委托人可以不运行QOS全节点，通过轻钱包就可以进行委托操作。")]),t._v(" "),e("p",[t._v("委托人分享验证人出块的收益，意味着他们也分担验证人的责任和义务。当验证人因宕机/作恶而受到惩罚，其委托人也会受到相应的惩罚。")]),t._v(" "),e("p",[t._v("在社区自治（待实现功能）中，委托人和验证人拥有同等的投票权。")]),t._v(" "),e("p",[t._v("因此即使没有运行全节点，占网络最大数量的委托人依然担任着主动且重要的角色，即他们要选择可信、稳定的验证人，来增加这些验证人的投票权重，并关注验证人的动向，以维护网络的安全和稳定。")]),t._v(" "),e("h2",{attrs:{id:"模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),e("h3",{attrs:{id:"qos通胀机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qos通胀机制"}},[t._v("#")]),t._v(" QOS通胀机制")]),t._v(" "),e("p",[t._v("根据"),e("a",{attrs:{href:"https://github.com/QOSGroup/whitepaper",target:"_blank",rel:"noopener noreferrer"}},[t._v("白皮书"),e("OutboundLink")],1),t._v("，QOS公链的挖矿数额是按年度固定的，在主网上线的第一年内，每产生一个区块产生的QOS数量大体相同。")]),t._v(" "),e("p",[t._v("主网通胀计划：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("时间")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("第一个四年")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("第二个四年")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("第三个四年")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("第四个四年")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("第五个四年")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("第六个四年")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("第七个四年")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("新铸币数量（亿）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("25.5")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("12.75")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("6.375")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("3.1875")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1.59375")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("0.796875")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("0.796875")])])])]),t._v(" "),e("p",[t._v("我们将其中每个四年定义为一个inflation_phrase通胀阶段，由endtime和total_amount组成，applied_amount标识本阶段已铸的QOS，一个阶段结束，即进入下一阶段。\n测试网通胀依照测试目的另外制定，详情可见"),e("a",{attrs:{href:"https://github.com/QOSGroup/qos-testnets",target:"_blank",rel:"noopener noreferrer"}},[t._v("测试网的genesis.json文件配置"),e("OutboundLink")],1),t._v('中的"mint"-"params"-"inflation_phrases"，例如：')]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('        "inflation_phrases": [\n                        {\n                          "end_time": "2023-10-20T00:00:00Z",\n                          "total_amount": "25500000000000",\n                          "applied_amount": "0"\n                        },\n                        {\n                          "end_time": "2027-10-20T00:00:00Z",\n                          "total_amount": "12750000000000",\n                          "applied_amount": "0"\n                        },\n                        {\n                          "end_time": "2031-10-20T00:00:00Z",\n                          "total_amount": "6375000000000",\n                          "applied_amount": "0"\n                        },\n                        {\n                          "end_time": "2035-10-20T00:00:00Z",\n                          "total_amount": "3187500000000",\n                          "applied_amount": "0"\n                        },\n                        {\n                          "end_time": "2039-10-20T00:00:00Z",\n                          "total_amount": "1593750000000",\n                          "applied_amount": "0"\n                        },\n                        {\n                          "end_time": "2043-10-20T00:00:00Z",\n                          "total_amount": "796875000000",\n                          "applied_amount": "0"\n                        },\n                        {\n                          "end_time": "2047-10-20T00:00:00Z",\n                          "total_amount": "796875000000",\n                          "applied_amount": "0"\n                        }\n        ]\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br")])]),e("p",[t._v("可以通过社区投票修改参数来制定通胀策略，修改通胀计划。")]),t._v(" "),e("p",[t._v("每一块通胀的QOS数：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://github.com/QOSGroup/static/blob/master/rewardPerBlock.png?raw=true",alt:"每一块的通胀总量"}})]),t._v(" "),e("h3",{attrs:{id:"社区基金"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#社区基金"}},[t._v("#")]),t._v(" 社区基金")]),t._v(" "),e("p",[t._v("在QOS每一块通胀的qos中，将有"),e("code",[t._v("$community_reward_rate")]),t._v("的QOS归属于社区基金，社区基金用于社区运营建设、奖励开发者、奖励有价值的生态推广（如社区认可的QSC联盟链）等活动。")]),t._v(" "),e("p",[t._v("社区基金的账户公开透明，用户可以发起"),e("code",[t._v("TaxUsage")]),t._v("类型的自治提议，申请将部分社区基金打入某一QOS账户对其进行使用，每个参与验证委托的QOS持有者都有权对该提议进行投票表态。")]),t._v(" "),e("h3",{attrs:{id:"验证-委托机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-委托机制"}},[t._v("#")]),t._v(" 验证/委托机制")]),t._v(" "),e("h4",{attrs:{id:"验证人"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证人"}},[t._v("#")]),t._v(" 验证人")]),t._v(" "),e("p",[t._v("QOS公链中有一个验证人节点的集合，验证人节点担当了BFT共识算法的具体实现——网络中的每一块都需要收集至少2/3的验证人节点签名。QOS公链中的每一块包含零到多条交易，验证人节点对块中的交易进行校验，对校验通过的块用自己的私钥签名，并广播到网络中去。")]),t._v(" "),e("h5",{attrs:{id:"验证人的权益"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证人的权益"}},[t._v("#")]),t._v(" 验证人的权益")]),t._v(" "),e("p",[t._v("每一块都有一个验证人来进行打块（proposer），该验证人会有$proposer_reward_rate的额外收益：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://github.com/QOSGroup/static/blob/master/proposerReward.png?raw=true",alt:"出块验证人收益"}})]),t._v(" "),e("p",[t._v("验证人打块的机会是与其绑定QOS数成正比的，因此打块的额外收益不会改变每个验证人在网络中的投票权重。")]),t._v(" "),e("p",[t._v("QOS公链验证人节点通过绑定一定的QOS，同时承担了DPOS算法的实现——依照其绑定的QOS数量，获得QOS网络挖矿的收益。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://github.com/QOSGroup/static/blob/master/validatorReward.png?raw=true",alt:"验证人（及其委托人）单块总收益"}})]),t._v(" "),e("p",[t._v("希望了解更多验证人节点的信息或希望成为QOS验证人，请查阅"),e("RouterLink",{attrs:{to:"/spec/validators/all_about_validators.html"}},[t._v("验证人节点详解")])],1),t._v(" "),e("h5",{attrs:{id:"验证人的惩罚"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证人的惩罚"}},[t._v("#")]),t._v(" 验证人的惩罚")]),t._v(" "),e("p",[t._v("QOS规定，过去的$ValidatorVotingStatusLen块中，验证人需要至少验证并签名$ValidatorVotingStatusLeast，否则验证人和委托该验证人所绑定的Token会受到同比例的惩罚，惩罚比例$SlashFractionDowntime")]),t._v(" "),e("h4",{attrs:{id:"委托人"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#委托人"}},[t._v("#")]),t._v(" 委托人")]),t._v(" "),e("p",[t._v("验证人所绑定的QOS由两部分组成：验证人自己绑定的（self-bond），委托人委托给验证人的(delegation-bond)")]),t._v(" "),e("p",[e("strong",[t._v("验证人总绑定(投票权重) = 验证人自绑定QOS数量 + ∑委托人委托给该验证人QOS数量")])]),t._v(" "),e("p",[t._v("对于委托人，其委托的QOS可以从验证人的总收入中获得相应比例的收益。由于验证人付出了人力和物力，验证人可以从总收益中抽取一定比例的佣金，QOS网络中的验证人佣金是统一的，以参数"),e("code",[t._v("$validator_commission_rate")]),t._v("定义。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://github.com/QOSGroup/static/blob/master/validatorSelfReward.png?raw=true",alt:"验证人自身每块收益"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://github.com/QOSGroup/static/blob/master/delegatorReward.png?raw=true",alt:"委托人每块收益"}})]),t._v(" "),e("ul",[e("li",[t._v("分配周期")])]),t._v(" "),e("p",[t._v("创建delegate后，由"),e("code",[t._v("$delegator_income_period_height")]),t._v("参数定义之后的每多少块为一个"),e("em",[t._v("分配周期")]),t._v("（在capricorn-2000测试网中为30块），在每个周期交替时为委托人分配收益/处理请求。")]),t._v(" "),e("p",[t._v("委托人后期追加委托QOS、unbond等的操作不会影响分配周期。")]),t._v(" "),e("p",[t._v("当前周期对绑定QOS的增减，对配置参数的修改，到下一周期开始时生效。")]),t._v(" "),e("p",[t._v("委托人在一个周期内多次修改同一配置项（例如是否复投），以该周期内最后一次修改为准，应用到下一周期。")]),t._v(" "),e("ul",[e("li",[t._v("解除绑定")])]),t._v(" "),e("p",[t._v("通过"),e("code",[t._v("TxUnbondDelegate")]),t._v("解绑QOS时的收益计算")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n     |                x                             y          |\n     |  --------------------------------|----------------------|\n     |                                 unbond -----------------|-------------------------|\n\n上次收益发放                                             下次收益发放                unbond解绑\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("unbond后，对应的validator将会增加一个计费点，unbond金额将在"),e("code",[t._v("unbond周期$unbond_return_height")]),t._v("之后返还至delegator账户。")]),t._v(" "),e("p",[t._v("unbond操作立即生效，先统计出当前收益，并追加到下次收益发放总额中。")]),t._v(" "),e("ol",[e("li",[t._v("下次收益发放时, 发放金额为 x + y；")]),t._v(" "),e("li",[t._v("当解绑QOS为当前所有绑定QOS时，y = 0;")]),t._v(" "),e("li",[t._v("解绑QOS为部分绑定QOS时， x > y > 0")])]),t._v(" "),e("ul",[e("li",[t._v("复投")])]),t._v(" "),e("p",[t._v("委托人可以指定、并后期修改是否复投（"),e("code",[t._v("is_compound")]),t._v("）。复投表示前一周期产生的收益自动绑定并参与到下一周期的委托中，若不复投则收益自动打入委托人账户。")]),t._v(" "),e("p",[t._v("复投可以持续、自动地扩大委托挖矿的投资规模，是一种好的选择，但需要注意，绑定的token赎回需要经过一个由参数"),e("code",[t._v("$unbond_return_height")]),t._v("定义块数的"),e("em",[t._v("冻结期")]),t._v("后才能回到委托人账户，盲目扩大委托绑定规模不利于流动性。")]),t._v(" "),e("h3",{attrs:{id:"惩罚机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#惩罚机制"}},[t._v("#")]),t._v(" 惩罚机制")]),t._v(" "),e("p",[t._v("验证人受到惩罚的原因是由于其有意作恶/无意犯错，或者没有履行到验证人的义务。\n另一方面，QOS网络维护不仅需要验证人，也需要委托人。委托人并非完全被动、只追求收益的角色，而是能够起到对验证人进行主动筛选、监督的作用，并在社区自治中发出自己的声音。\n在这个基本思想的指导下，在QOS中，验证人受到惩罚的形式是以消减其绑定QOS的方式，其委托人绑定的QOS也会受到等比例的惩罚。")]),t._v(" "),e("h4",{attrs:{id:"双签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#双签"}},[t._v("#")]),t._v(" 双签")]),t._v(" "),e("p",[t._v("双签（double-signing），指在QOS网络的同一高度上，同一验证人签名一次以上，并广播不同的信息到网络中。\n在BFT网络中，双签被视为拜占庭节点，拜占庭节点超过2/3时，网络一定会分叉，因此我们将双签视为严重的错误，并施以较高的罚金——销毁验证人及其委托人一定比例的绑定QOS。")]),t._v(" "),e("p",[t._v("在实际操作中，验证人双签往往由于无意的失误，包括：")]),t._v(" "),e("ol",[e("li",[t._v("私钥被盗")]),t._v(" "),e("li",[t._v("配置错误导致同一验证节点启动两次或以上")])]),t._v(" "),e("p",[t._v("由此可见私钥安全的保护和运维的能力，对validator而言至关重要。")]),t._v(" "),e("p",[t._v("在QOS测试网capricorn-2000中暂未对双签进行惩罚")]),t._v(" "),e("h4",{attrs:{id:"未参与社区自治"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#未参与社区自治"}},[t._v("#")]),t._v(" 未参与社区自治")]),t._v(" "),e("p",[t._v("在社区自治投票中，验证人及其委托人均未参与投票时，验证人（及其委托人）将会受到到"),e("code",[t._v("$penalty")]),t._v("比例的惩罚。")]),t._v(" "),e("h3",{attrs:{id:"gas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gas"}},[t._v("#")]),t._v(" gas")]),t._v(" "),e("p",[t._v("QOS除了硬件网络成本外，视交易性质的区别，为不同的交易设置了不同的gas费。")])])}),[],!1,null,null,null);a.default=r.exports}}]);